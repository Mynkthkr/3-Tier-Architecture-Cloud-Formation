AWSTemplateFormatVersion: 2010-09-09
Description: An example CloudFormation template for Fargate.
Parameters:

  Mydb:
    Description: a
    Type: AWS::SSM::Parameter::Value<String>
    Default: dbname


Resources:


  ## VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  ## SUBNETS
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: public-subnet-1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: public-subnet-2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: private-subnet-1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: private-subnet-1

  ## INTERNET GATEWAY
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  ## Gateway Attachment
  GatewayToInternet:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  ## PUBLIC ROUTING
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: public-rt

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  ## NAT GATEWAY
  NatGateway:
    Type: AWS::EC2::NatGateway
    DependsOn: NatPublicIP
    Properties:
      SubnetId: !Ref PublicSubnet1
      AllocationId: !GetAtt NatPublicIP.AllocationId
      Tags:
        - Key: Name
          Value: asgg-nat

  ## ELASTIC IP
  NatPublicIP:
    Type: AWS::EC2::EIP
    DependsOn: VPC
    Properties:
      Domain: vpc

  ## PRIVATE ROUTING
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: private-rt

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

                                                              
 
  myDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: Private subnet for RDS
    
      SubnetIds: 
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      Tags: 
        - Key: Name
          Value: DB subnet

  DBinstance: 
    Type: AWS::RDS::DBInstance
    Properties: 
      DBSubnetGroupName: !Ref myDBSubnetGroup
      AllocatedStorage: 5
      DBInstanceClass: db.t3.small
      Engine: MySQL
      MasterUsername: mynk
      MasterUserPassword: mynk12345
      DBName: db
    DeletionPolicy: Snapshot

  DbSecurityByEC2SecurityGroup: 
    Type: AWS::RDS::DBSecurityGroup
    Properties: 
      
      GroupDescription: "Ingress for Amazon EC2 security group"
      DBSecurityGroupIngress: 
          CIDRIP: 0.0.0.0/0



  # SSMRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     RoleName: SSMrole
  #     AssumeRolePolicyDocument:
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service: ecs-tasks.amazonaws.com
  #           Action: 'sts:AssumeRole'
  #     ManagedPolicyArns:
  #       - 'arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess'
  
  # BasicParameter:
  #   Type: AWS::SSM::Parameter
  #   Properties:
  #     Name: MYSQL_HOSTNAME
  #     Type: String
  #     Value: !GetAtt GetDBinstance.Endpoint.Address
  #     Tier: Advanced
  #    # Policies: '[{"Type":"Expiration","Version":"1.0","Attributes":{"Timestamp":"2020-05-13T00:00:00.000Z"}},{"Type":"ExpirationNotification","Version":"1.0","Attributes":{"Before":"5","Unit":"Days"}},{"Type":"NoChangeNotification","Version":"1.0","Attributes":{"After":"60","Unit":"Days"}}]'
  #     Description: SSM Parameter for running date command.
  #     #AllowedPattern: "^[a-zA-Z]{1,10}$"
  #     Tags:
  #       Environment: DEV


Outputs:
  VPCid:
    Description: The VPCid
    Value: !Ref VPC
    Export:
      Name: VPC

  PublicSub1:
    Description: public sub 1
    Value: !Ref PublicSubnet1
    Export:
      Name: PublicSubnet1

  PublicSub2:
    Description: public 2
    Value: !Ref PublicSubnet2
    Export:
      Name: PublicSubnet2

  PrivateSub1:
    Description: private 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: PrivateSubnet1

  PrivateSub2:
    Description: private 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: PrivateSubnet2

  DBEndpoint:
    Description: The connection endpoint for the database.
    Value: !GetAtt  DBinstance.Endpoint.Address
    Export:
      Name: DBEndPoint 


  DBName:
    Description: Database-name
    Value: db
    Export:
      Name: databasename

  DBuser:
    Description: Database-user
    Value: mynk
    Export:
      Name: user

  BDpass:
    Description: Database-password
    Value: mynk12345
    Export:
      Name: password

  BD:
    Description: Database-password
    Value: !Ref Mydb
    Export:
      Name: mayank

